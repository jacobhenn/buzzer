// Generated by CoffeeScript 2.5.1
(function() {
  var amBlocked, buzz, canBuzz, checkServerBuzzer, clientState, command, doUpdateScores, highlight, name, updateBuzzer, updateScores, url, urlParams;

  doUpdateScores = true;

  clientState = {
    buzzer: void 0
  };

  urlParams = new URLSearchParams(window.location.search);

  canBuzz = false;

  name = urlParams.get("name");

  url = "http://127.0.0.1:8080/";

  amBlocked = function() {
    return fetch(url + "blocked/" + name).then((response) => {
      return response.text();
    });
  };

  buzz = function() {
    if (canBuzz) {
      return fetch(url + "buzz", {
        method: "POST",
        body: name
      });
    }
  };

  // change the color of the top bar and state text
  highlight = function(color) {
    $("#state").css("color", color);
    return $("#topbar").css("background-color", color);
  };

  // change the page if the buzzer state has changed
  checkServerBuzzer = function(serverState) {
    if (serverState.buzzer === clientState.buzzer) {

    } else if (serverState.buzzer === "Open") {
      $("body").focus();
      return amBlocked().then(function(blocked) {
        if (blocked) {
          canBuzz = false;
          $("#state").text("you have already buzzed in");
          return highlight("#EBCB8B");
        } else {
          canBuzz = true;
          $("#state").text("the buzzer is open");
          return highlight("#A3BE8C");
        }
      });
    } else if (serverState.buzzer === "Closed") {
      if (doUpdateScores) {
        doUpdateScores = false;
      }
      canBuzz = false;
      $("#state").text("the buzzer is closed");
      highlight("#BF616A");
      return updateScores();
    } else {
      canBuzz = false;
      if (serverState.owner !== name) {
        $("#state").text(serverState.owner + " has buzzed in");
        return highlight("#BF616A");
      } else {
        $("#state").text("you have buzzed in");
        return highlight("#88C0D0");
      }
    }
  };

  // fetch and update scores
  updateScores = function() {
    return fetch(url + "state/scores").then((response) => {
      return response.json();
    }).then(function(response) {
      return $("#scores").html((response.map((team) => {
        return team.name + " " + team.score;
      })).join("<br/>"));
    });
  };

  // grab the buzzer state and update page accordingly
  updateBuzzer = function() {
    fetch(url + "state/buzzer").then((response) => {
      return response.json();
    }).then(function(response) {
      checkServerBuzzer(response);
      return clientState = response;
    });
    if (doUpdateScores) {
      return updateScores();
    }
  };

  command = function(data) {
    return post("command", data);
  };

  // check if the pressed key is the selected buzz key
  $("body").keydown(function(event) {
    if (event.code === $("#key").val()) {
      return buzz();
    }
  });

  // add self to team list
  fetch(url + "command", {
    method: "POST",
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      action: "AddTeam",
      name: name
    })
  });

  setInterval(updateBuzzer, 100);

}).call(this);
